% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colPairs.R
\docType{methods}
\name{colPairs}
\alias{colPairs}
\alias{colPair}
\alias{colPairNames}
\alias{colPair,SingleCellExperiment,missing-method}
\alias{colPair,SingleCellExperiment,numeric-method}
\alias{colPair,SingleCellExperiment,character-method}
\alias{colPairs,SingleCellExperiment-method}
\alias{colPairNames,SingleCellExperiment-method}
\alias{colPair<-}
\alias{colPairs<-}
\alias{colPairNames<-}
\alias{colPair<-,SingleCellExperiment,missing-method}
\alias{colPair<-,SingleCellExperiment,numeric-method}
\alias{colPair<-,SingleCellExperiment,character-method}
\alias{colPairs<-,SingleCellExperiment-method}
\alias{colPairNames<-,SingleCellExperiment,character-method}
\title{Column pair methods}
\description{
Methods to get or set column pairings in a \linkS4class{SingleCellExperiment} object.
These are typically used to store and retrieve relationships between cells, 
e.g., in nearest-neighbor graphs or for inferred cell-cell interactions.
}
\section{Getters}{

In the following examples, \code{x} is a \linkS4class{SingleCellExperiment} object.
\describe{
\item{\code{colPair(x, type, asSparse=FALSE)}:}{
Retrieves a \linkS4class{SelfHits} object where each entry represents a pair of columns of \code{x}
and has number of nodes equal to \code{ncol(x)}.
Associated data values are stored in the \code{"value"} field in \code{\link{mcols}}.
\code{type} is either a string specifying the name of the column pairing in \code{x} to retrieve,
or a numeric scalar specifying the index of the desired result.
If \code{asSparse=FALSE}, a sparse matrix is returned instead where each row/column corresponds to a column of \code{x}.
}
\item{\code{colPairNames(x)}:}{
Returns a character vector containing the names of all dimensionality reduction results in \code{x}.
This is guaranteed to be of the same length as the number of results, though the names may not be unique.
}
\item{\code{colPairs(x, asSparse=FALSE)}:}{
Returns a named \linkS4class{List} of matrices containing one or more column pairings as \linkS4class{SelfHits} objects.
If \code{asSparse=FALSE}, each entry is instead a sparse matrix.
}
}
}

\section{Single setter}{

\code{colPair(x, type) <- value} will add or replace a column pairing
in a \linkS4class{SingleCellExperiment} object \code{x}.
The value of \code{type} determines how the result is added or replaced:
\itemize{
\item If \code{type} is missing, \code{value} is assigned to the first result.
If the result already exists, its name is preserved; otherwise it is given a default name \code{"unnamed1"}.
\item If \code{type} is a numeric scalar, it must be within the range of existing results, and \code{value} will be assigned to the result at that index.
\item If \code{type} is a string and a result exists with this name, \code{value} is assigned to to that result.
Otherwise a new result with this name is append to the existing list of results.
}

\code{value} is expected to be a \linkS4class{SelfHits} with number of nodes equal to \code{ncol(x)}.
It may also be a sparse matrix with number of rows and columns equal to \code{ncol(x)}.
Alternatively, if \code{value} is \code{NULL}, the result corresponding to \code{type} is removed from \code{x}.
}

\section{Other setters}{

In the following examples, \code{x} is a \linkS4class{SingleCellExperiment} object.
\describe{
\item{\code{colPairs(x) <- value}:}{
Replaces all column pairings in \code{x} with those in \code{value}.
The latter should be a list-like object containing any number of \linkS4class{SelfHits} or sparse matrices,
each of which is subject to the constraints described for the single setter.

If \code{value} is named, those names will be used to name the dimensionality reduction results in \code{x}.
Otherwise, unnamed results are assigned default names prefixed with \code{"unnamed"}.

If \code{value} is \code{NULL}, all dimensionality reduction results in \code{x} are removed.
}
\item{\code{colPairNames(x) <- value}:}{
Replaces all names for column pairings in \code{x} with a character vector \code{value}.
This should be of length equal to the number of results currently in \code{x}.
}
}
}

\section{A note on subset replacement}{

When column-subset replacement is performed on a SingleCellExperiment object (i.e., \code{x[,i] <- y}),
pairings in \code{x} are only replaced if both columns belong in \code{i}.
Pairings with only one column in \code{i} are preserved in order to ensure that \code{x[,i] <- x[,i]} is a no-op.
However, if we are replacing the identity of the features in \code{x[i,]},
it is unlikely that the pairings involving the old identities are applicable to the replacement features in \code{y}.
In such cases, additional pruning may be required to remove all pairs involving \code{i} prior to replacement.
}

\examples{
example(SingleCellExperiment, echo=FALSE)

# Making up some regulatory pairings:
hits <- SelfHits(
    sample(ncol(sce), 10),
    sample(ncol(sce), 10),
    nnode=ncol(sce)
)
mcols(hits)$value <- runif(10)

colPair(sce, "regulators") <- hits
colPair(sce, "regulators")

as.mat <- colPair(sce, "regulators", asSparse=TRUE)
class(as.mat)

colPair(sce, "coexpression") <- hits
colPairs(sce)

colPair(sce, "regulators") <- NULL
colPairs(sce)

colPairs(sce) <- SimpleList()
colPairs(sce)

}
\seealso{
\code{\link{rowPairs}}, for the row equivalent.
}
\author{
Aaron Lun
}
